{
    "$schema": "http://json-schema.org/draft/2019-09/schema#",
    "$ref": "#/definitions/DeviceConfiguration",
    "definitions": {
        "DeviceConfiguration": {
            "type": "object",
            "unevaluatedProperties": false,
            "properties": {
                "$schema": {
                    "type": "string",
                    "format": "uri-reference",
                    "qt-uri-protocols": [
                        "http",
                        "https"
                    ]
                },
                "version": {
                    "type": "integer",
                    "title": "The device configuration file version",
                    "enum": [
                        1
                    ]
                },
                "server_ip": {
                    "type": "string",
                    "anyOf": [
                        {
                            "format": "ipv4"
                        },
                        {
                            "format": "ipv6"
                        }
                    ],
                    "title": "The IP address on which the servers should run. This value can be overwritten by the CLI option -i/--server-ip IP."
                },
                "server_base_port": {
                    "type": "integer",
                    "default": 50051,
                    "title": "The port number for the first SiLA Server. This value can be overwritten by the CLI option -p/--server-base-port PORT."
                },
                "regenerate_certificates": {
                    "type": "boolean",
                    "default": false,
                    "title": "Force regeneration of the self-signed certificates (e.g. if the IP address of the machine running the servers changed). This value can be overwritten by the CLI option --regenerate-certificates."
                },
                "log_level": {
                    "type": "string",
                    "enum": [
                        "debug",
                        "info",
                        "warning",
                        "error",
                        "critical"
                    ],
                    "default": "info",
                    "title": "Set the logging level of the application. This value can be overwritten by the CLI option -l/--log-level LEVEL."
                },
                "log_file_dir": {
                    "type": "string",
                    "title": "The directory to write log files to (if not given log messages will only be printed to standard out). This value can be overwritten by the CLI option --log-file-dir DIR."
                },
                "scan_devices": {
                    "type": "boolean",
                    "default": false,
                    "title": "Automatically scan for supported connected devices (e.g. scan for available Sartorius balances if the sila_cetoni_balance package is installed). This value can be overwritten by the CLI option --scan-devices/--no-scan-devices."
                },
                "simulate_missing": {
                    "type": "boolean",
                    "default": false,
                    "title": "Try to simulate devices which are not explicitly set to 'simulated' in the config file if the application cannot connect to them. This value can be overwritten by the CLI option --simulate-missing/--no-simulate-missing."
                },
                "cetoni_devices": {
                    "$ref": "#/definitions/CetoniDevices"
                },
                "devices": {
                    "$ref": "#/definitions/Devices"
                }
            },
            "required": [
                "version"
            ],
            "anyOf": [
                {
                    "required": [
                        "cetoni_devices"
                    ]
                },
                {
                    "required": [
                        "devices"
                    ]
                }
            ]
        },
        "CetoniDevices": {
            "type": "object",
            "title": "The CETONI devices of the system represented by the device configuration",
            "additionalProperties": false,
            "properties": {
                "device_config_path": {
                    "type": "string",
                    "title": "Path to a valid CETONI device configuration created with the CETONI Elements software"
                },
                "max_time_without_battery": {
                    "$comment": "MobDos specific property",
                    "type": "string",
                    "format": "duration",
                    "title": "How long the device will stay on at most without a battery (default: 20 seconds)",
                    "default": "PT20S",
                    "examples": [
                        "PT0.5H",
                        "PT30M",
                        "PT10M30S"
                    ]
                },
                "max_time_without_traffic": {
                    "$comment": "MobDos specific property",
                    "type": "string",
                    "format": "duration",
                    "title": "How long the device will stay on without any SiLA Command calls or Property requests to non-standard features (default: 10 minutes)",
                    "default": "PT10M",
                    "examples": [
                        "P2D",
                        "PT0.5H",
                        "PT30M",
                        "P3DT1H5M30S"
                    ]
                }
            },
            "required": [
                "device_config_path"
            ]
        },
        "Devices": {
            "type": "object",
            "title": "All devices that are not configurable via CETONI Elements (i.e. 3rd-party devices that have an exclusive device driver implementation in sila_cetoni",
            "additionalProperties": {
                "$ref": "#/definitions/Device"
            },
            "properties": {},
            "required": []
        },
        "Device": {
            "type": "object",
            "title": "A 3rd-party device that has support in sila_cetoni through an included device driver implementation",
            "unevaluatedProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "title": "The device type"
                },
                "manufacturer": {
                    "type": "string",
                    "title": "The device manufacturer"
                },
                "simulated": {
                    "type": "boolean",
                    "title": "Whether this device should be simulated (if possible) or not. If it's not possible to simulate this device, there won't be a SiLA server created for it.",
                    "default": false
                }
            },
            "required": [
                "type",
                "manufacturer"
            ],
            "allOf": [
                {"$comment": "@addOnsRefInsertPoint"}
            ]
        },
        "Port": {
            "$comment": "Common property type used by add-on packages",
            "type": "string",
            "title": "The serial port used to communicate with the device (e.g. COM1 or /dev/ttyUSB1)",
            "examples": [
                "COM1",
                "/dev/ttyUSB1"
            ]
        },
        "ServerUrl": {
            "$comment": "Common property type used by add-on packages",
            "type": "string",
            "title": "The URL to a server running on the device providing an API to control the device (e.g. a REST API)",
            "format": "uri",
            "qt-uri-protocols": [
                "http",
                "https"
            ],
            "examples": [
                "http://device.local/rest/v1_0/",
                "http://192.168.0.100/rest/v1_0/"
            ]
        },
        "IOPort": {
            "$comment": "Common property type used by add-on packages",
            "type": "string",
            "title": "An I/O port (e.g. I_1 or O_3)",
            "examples": [
                "I_1",
                "InputValue1",
                "O_3"
            ]
        }
    }
}
